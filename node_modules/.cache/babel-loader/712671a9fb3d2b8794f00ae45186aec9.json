{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johne\\\\Desktop\\\\git-projekt\\\\hero-ify\\\\src\\\\signin\\\\signInView.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nconst spotifyApi = new Spotify();\nconst h = React.createElement;\nexport default class SignInView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      topTracks: this.props.model.getMyTopTracks()\n    };\n    this.update = this.update.bind(this);\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  update() {\n    this.setState({});\n  }\n\n  componentDidMount() {\n    this.props.model.addObserver(() => this.update());\n  }\n\n  componentWillUnmount() {\n    this.props.model.removeObserver(this);\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  getMyTopTracks() {\n    var alltrackstoptracks = [];\n    spotifyApi.getMyTopTracks({\n      limit: 100\n    }).then(response => {\n      for (var i = 0, l = response.items.length; i < l; i++) {\n        alltrackstoptracks.push(response.items[i]);\n      }\n\n      this.setState({\n        topTracks: alltrackstoptracks\n      });\n    });\n  }\n\n  hideAllResponses() {\n    if (this.state.loggedIn === true) {\n      document.getElementById(\"loggedout\").classList.add('hide');\n      document.getElementById(\"loggedin\").classList.remove('hide');\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"centered\",\n      id: \"intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      class: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" Heroify\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \" Get a playlist based on the super hero you want to be and the music you love\"), React.createElement(\"div\", {\n      class: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"btn btn-success btn-lg\",\n      class: \"btn btn-success btn-lrg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"white\",\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" LET'S START \")))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/johne/Desktop/git-projekt/hero-ify/src/signin/signInView.js"],"names":["React","Component","Spotify","Button","Link","spotifyApi","h","createElement","SignInView","constructor","props","state","topTracks","model","getMyTopTracks","update","bind","getHashParams","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","setState","componentDidMount","addObserver","componentWillUnmount","removeObserver","getNowPlaying","getMyCurrentPlaybackState","then","response","nowPlaying","name","item","albumArt","album","images","url","alltrackstoptracks","limit","i","l","items","length","push","hideAllResponses","loggedIn","document","getElementById","classList","add","remove","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Spotify from 'spotify-web-api-js'\r\nimport { Button } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst spotifyApi = new Spotify()\r\nconst h = React.createElement\r\n\r\nexport default class SignInView extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      topTracks: this.props.model.getMyTopTracks()\r\n    }\r\n\r\n    this.update = this.update.bind(this);\r\n  }\r\n\r\n  getHashParams () {\r\n    var hashParams = {}\r\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\r\n    q = window.location.hash.substring(1)\r\n    e = r.exec(q)\r\n    while (e) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2])\r\n      e = r.exec(q)\r\n    }\r\n    return hashParams\r\n  }\r\n\r\n  update() {\r\n    this.setState({\r\n    })\r\n}\r\n\r\n\r\ncomponentDidMount() {\r\n    this.props.model.addObserver(() => this.update());\r\n    \r\n  }\r\n \r\ncomponentWillUnmount() {\r\n    this.props.model.removeObserver(this)\r\n  }\r\n\r\n\r\n  getNowPlaying () {\r\n    spotifyApi.getMyCurrentPlaybackState().then((response) => {\r\n      this.setState({\r\n        nowPlaying: {\r\n          name: response.item.name,\r\n          albumArt: response.item.album.images[0].url\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  getMyTopTracks () {\r\n    var alltrackstoptracks = []\r\n    spotifyApi.getMyTopTracks({ limit: 100 }).then(response => {\r\n      for (var i = 0, l = response.items.length; i < l; i++) {\r\n        alltrackstoptracks.push(response.items[i])\r\n      }\r\n      this.setState({\r\n        topTracks: alltrackstoptracks\r\n      })\r\n    })\r\n  }\r\n\r\n  hideAllResponses () {\r\n    if (this.state.loggedIn === true) {\r\n      document.getElementById(\"loggedout\").classList.add('hide')\r\n      document.getElementById(\"loggedin\").classList.remove('hide')\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='intro'>\r\n        <div class='centered' id=\"intro\">\r\n          <h1 class=\"text-center\"> Heroify</h1>\r\n          <p> Get a playlist based on the super hero you want to be and the music you love</p>\r\n          <div class=\"text-center\">\r\n            {<Button variant=\"btn btn-success btn-lg\" class=\"btn btn-success btn-lrg\">\r\n              <a class = \"white\" href='http://localhost:8888'> LET'S START </a>\r\n            </Button>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}