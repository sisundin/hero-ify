{"ast":null,"code":"import React from 'react';\nimport spin from './spinner.gif';\nconst h = React.createElement;\nexport default function RenderPromise({\n  promise,\n  renderData\n}) {\n  const [data, setData] = React.useState(null);\n  React.useEffect(() => {\n    setData(null);\n    promise.then(x => setData(x)).catch(err => setData({\n      error: err\n    }));\n  }, [promise]); // TODO: return cancel promise on unmount\n\n  return data === null && h(\"img\", {\n    src: spin\n  }) || data !== null && !data.error && h(renderData, {\n    data\n  }) || data !== null && data.error && h(\"div\", {}, data.error.toString());\n}\n;","map":{"version":3,"sources":["/Users/mariajacobson/Desktop/iprog/project/hero-ify/src/util/renderPromise.js"],"names":["React","spin","h","createElement","RenderPromise","promise","renderData","data","setData","useState","useEffect","then","x","catch","err","error","src","toString"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,MAAMC,CAAC,GAAGF,KAAK,CAACG,aAAhB;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAvB,EAA6C;AAExD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAgBR,KAAK,CAACS,QAAN,CAAe,IAAf,CAAtB;AACAT,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAI;AAACF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACfH,IAAAA,OAAO,CAACM,IAAR,CAAaC,CAAC,IAAEJ,OAAO,CAACI,CAAD,CAAvB,EACQC,KADR,CACcC,GAAG,IAAEN,OAAO,CAAC;AAACO,MAAAA,KAAK,EAACD;AAAP,KAAD,CAD1B;AAEL,GAHD,EAGG,CAACT,OAAD,CAHH,EAHwD,CAMxC;;AAEhB,SAASE,IAAI,KAAG,IAAP,IAAeL,CAAC,CAAC,KAAD,EAAQ;AAACc,IAAAA,GAAG,EAACf;AAAL,GAAR,CAAjB,IACCM,IAAI,KAAI,IAAR,IAAgB,CAACA,IAAI,CAACQ,KAAtB,IAA+Bb,CAAC,CAACI,UAAD,EAAa;AAACC,IAAAA;AAAD,GAAb,CADjC,IAECA,IAAI,KAAI,IAAR,IAAgBA,IAAI,CAACQ,KAArB,IAA8Bb,CAAC,CAAC,KAAD,EAAQ,EAAR,EAAYK,IAAI,CAACQ,KAAL,CAAWE,QAAX,EAAZ,CAFxC;AAGF;AAAA","sourcesContent":["import React from 'react';\n\nimport spin from './spinner.gif'\n\nconst h = React.createElement;\n\nexport default function RenderPromise({promise, renderData}){\n\n    const [data, setData]=React.useState(null);\n    React.useEffect(()=>{setData(null);\n          promise.then(x=>setData(x))\n                 .catch(err=>setData({error:err}));\n    }, [promise]);  // TODO: return cancel promise on unmount\n \n    return  (data===null && h(\"img\", {src:spin}))\n         || (data !==null && !data.error && h(renderData, {data}))\n         || (data !==null && data.error && h(\"div\", {}, data.error.toString()));\n };\n \n\n\n\n \n "]},"metadata":{},"sourceType":"module"}