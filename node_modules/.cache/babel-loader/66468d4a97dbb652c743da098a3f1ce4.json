{"ast":null,"code":"var _jsxFileName = \"/Users/simonsundin/Documents/GitHub/hero-ify/src/signin/signInView.js\";\nimport React, { Component } from 'react';\nimport Spotify from 'spotify-web-api-js';\nimport { Button } from 'react-bootstrap';\nconst spotifyApi = new Spotify();\nconst h = React.createElement;\nexport default class SignInView extends Component {\n  constructor(params) {\n    super(params);\n    const token = this.getHashParams().access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    }\n\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: {\n        name: 'Not Checked',\n        albumArt: ''\n      },\n      topTracks: []\n    };\n  }\n\n  getHashParams() {\n    var hashParams = {};\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams;\n  }\n\n  getNowPlaying() {\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      });\n    });\n  }\n\n  getMyTopTracks() {\n    var alltrackstoptracks = [];\n    spotifyApi.getMyTopTracks({\n      limit: 100\n    }).then(response => {\n      for (var i = 0, l = response.items.length; i < l; i++) {\n        alltrackstoptracks.push(response.items[i]);\n      }\n\n      this.setState({\n        topTracks: alltrackstoptracks\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:8888\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Login to Spotify \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Now Playing: \", this.state.nowPlaying.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.nowPlaying.albumArt,\n      style: {\n        height: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.loggedIn && React.createElement(Button, {\n      variant: \"primary mr-1\",\n      onClick: () => this.getNowPlaying(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Check Now Playing\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" (Play a song on Spotify and press the button) \")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state.loggedIn && React.createElement(Button, {\n      variant: \"outline-dark mr-1\",\n      onClick: () => this.getMyTopTracks(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Click here see your recent top tracks\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Recent top tracks: \", this.state.topTracks.map(track => h('ul', {}, h('li', {\n      id: 'list'\n    }, track.name)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/simonsundin/Documents/GitHub/hero-ify/src/signin/signInView.js"],"names":["React","Component","Spotify","Button","spotifyApi","h","createElement","SignInView","constructor","params","token","getHashParams","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","topTracks","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getNowPlaying","getMyCurrentPlaybackState","then","response","setState","item","album","images","url","getMyTopTracks","alltrackstoptracks","limit","i","l","items","length","push","render","height","map","track","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Spotify from 'spotify-web-api-js'\nimport { Button } from 'react-bootstrap'\nconst spotifyApi = new Spotify()\nconst h = React.createElement\n\nexport default class SignInView extends Component {\n  constructor (params) {\n    super(params)\n    const token = this.getHashParams().access_token\n    if (token) {\n      spotifyApi.setAccessToken(token)\n    }\n    this.state = {\n      loggedIn: token ? true : false,\n      nowPlaying: { name: 'Not Checked', albumArt: '' },\n      topTracks: []\n    }\n  }\n\n  getHashParams () {\n    var hashParams = {}\n    var e, r = /([^&;=]+)=?([^&;]*)/g,\n    q = window.location.hash.substring(1)\n    e = r.exec(q)\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2])\n      e = r.exec(q)\n    }\n    return hashParams\n  }\n\n  getNowPlaying () {\n    spotifyApi.getMyCurrentPlaybackState().then((response) => {\n      this.setState({\n        nowPlaying: {\n          name: response.item.name,\n          albumArt: response.item.album.images[0].url\n        }\n      })\n    })\n  }\n\n  getMyTopTracks () {\n    var alltrackstoptracks = []\n    spotifyApi.getMyTopTracks({ limit: 100 }).then(response => {\n      for (var i = 0, l = response.items.length; i < l; i++) {\n        alltrackstoptracks.push(response.items[i])\n      }\n      this.setState({\n        topTracks: alltrackstoptracks\n      })\n    })\n  }\n\n  render () {\n    return (\n      <div className='App'>\n        <Button variant=\"outline-primary\">\n          <a href='http://localhost:8888'> Login to Spotify </a>\n        </Button>\n        <div>\n          Now Playing: {this.state.nowPlaying.name}\n        </div>\n        <div>\n          <img src={this.state.nowPlaying.albumArt} style={{ height: 150 }} />\n        </div>\n        <div>\n          {this.state.loggedIn &&\n            <Button variant='primary mr-1' onClick={() => this.getNowPlaying()}>\n              Check Now Playing\n            </Button>}\n          <p> (Play a song on Spotify and press the button) </p>\n        </div>\n        <div>\n          {this.state.loggedIn &&\n            <Button variant='outline-dark mr-1' onClick={() => this.getMyTopTracks()}>\n              Click here see your recent top tracks\n            </Button>}\n        </div>\n        <div>\n          Recent top tracks: {this.state.topTracks.map(track => h('ul', {}, h('li', {id: 'list'}, track.name)))}\n        </div>\n\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}